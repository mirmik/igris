#ifndef IGRIS_STD_STDEXCEPT_H
#define IGRIS_STD_STDEXCEPT_H

#include <exception>

namespace std
{
    class out_of_range : public exception
    {
    public:
        out_of_range(const char *msg) : exception(msg) {}
    };

    class logic_error : public exception
    {
    public:
        logic_error(const char *msg) : exception(msg) {}
    };

    class runtime_error : public exception
    {
    public:
        runtime_error(const std::string &msg) : exception(msg) {}
    };

    class invalid_argument : public exception
    {
    public:
        invalid_argument(const char *msg) : exception(msg) {}
    };

    class length_error : public exception
    {
    public:
        length_error(const char *msg) : exception(msg) {}
    };

    class bad_alloc : public exception
    {
    public:
        bad_alloc(const char *msg) : exception(msg) {}
    };

    class bad_cast : public exception
    {
    public:
        bad_cast(const char *msg) : exception(msg) {}
    };

    class bad_typeid : public exception
    {
    public:
        bad_typeid(const char *msg) : exception(msg) {}
    };
}

#endif