#ifndef IGRIS_STD_SET_H
#define IGRIS_STD_SET_H

#include <igris/container/flat_set.h>
#include <memory>

namespace std
{
    template <class Key,
              class Compare = std::less<Key>,
              class Allocator = std::allocator<Key>>
    class set : public flat_set<Allocator>
    {
    public:
        using key_type = Key;
        using value_type = Key;
        using key_compare = Compare;
        using value_compare = Compare;
        using allocator_type = Allocator;
        using reference = value_type &;
        using const_reference = const value_type &;
        using pointer = typename std::allocator_traits<Allocator>::pointer;
        using const_pointer =
            typename std::allocator_traits<Allocator>::const_pointer;
        using iterator = pointer;
        using const_iterator = const_pointer;
        using reverse_iterator = pointer;
        using const_reverse_iterator = const_pointer;
        using difference_type = std::ptrdiff_t;
    };
}

#endif
