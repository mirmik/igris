#ifndef IGRIS_COMPAT_STD_CSTDLIB_H
#define IGRIS_COMPAT_STD_CSTDLIB_H

#include <string.h>

namespace std 
{
    inline int strcmp(const char *s1, const char *s2)
    {
        return ::strcmp(s1, s2);
    }
    
    inline int strncmp(const char *s1, const char *s2, size_t n)
    {
        return ::strncmp(s1, s2, n);
    }
    
    inline char *strcpy(char *dest, const char *src)
    {
        return ::strcpy(dest, src);
    }
    
    inline char *strncpy(char *dest, const char *src, size_t n)
    {
        return ::strncpy(dest, src, n);
    }
    
    inline char *strcat(char *dest, const char *src)
    {
        return ::strcat(dest, src);
    }
    
    inline char *strncat(char *dest, const char *src, size_t n)
    {
        return ::strncat(dest, src, n);
    }
    
    inline size_t strlen(const char *s)
    {
        return ::strlen(s);
    }
    
    inline char *strchr(const char *s, int c)
    {
        return ::strchr(s, c);
    }
    
    inline char *strrchr(const char *s, int c)
    {
        return ::strrchr(s, c);
    }
    
    inline char *strstr(const char *s1, const char *s2)
    {
        return ::strstr(s1, s2);
    }
    
    inline char *strtok(char *s, const char *delim)
    {
        return ::strtok(s, delim);
    }
    
    inline char *strpbrk(const char *s, const char *accept)
    {
        return ::strpbrk(s, accept);
    }
    
    inline char *strdup(const char *s)
    {
        return ::strdup(s);
    }

    /*inline int strcoll(const char *s1, const char *s2)
    {
        return ::strcoll(s1, s2);
    }*/

    /*inline size_t strxfrm(char *dest, const char *src, size_t n)
    {
        return ::strxfrm(dest, src, n);
    }*/

    inline char *strtok_r(char *s, const char *delim, char **saveptr)
    {
        return ::strtok_r(s, delim, saveptr);
    }
}

#endif
