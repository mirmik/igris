#ifndef IGRIS_STD_CMATH_H
#define IGRIS_STD_CMATH_H

#include <math.h>

#ifndef WITHOUT_LOG2
#define WITHOUT_LOG2 0
#endif

#ifdef abs
#undef abs
#endif

namespace std 
{
	template<class T> T abs(const T& a) { return a >= 0 ? a : -a; }

	using ::sin;
	using ::cos;
	using ::tan;
	//using ::ctg;
	using ::sinh;
	using ::cosh;
	using ::tanh;
	//using ::ctgh;

	using ::asin;
	using ::acos;
	using ::atan;
	using ::atan2;

	using ::exp;
	using ::pow;
	using ::sqrt;
	using ::log;

#if !(WITHOUT_LOG2)
	using ::log2;
#endif

	using ::log10;

	using ::copysign;

	using ::round;
	using ::ceil;
	using ::floor;

	using ::fmod;

	static inline int       abs( int n ) 		{ return n < 0 ? -n : n; }
	static inline long      abs( long n ) 		{ return n < 0 ? -n : n; }
	static inline long long abs( long long n ) 	{ return n < 0 ? -n : n; }

	static inline float       abs( float n ) 		{ return n < 0 ? -n : n; }
	static inline double      abs( double n ) 		{ return n < 0 ? -n : n; }
	static inline long double abs( long double n ) 	{ return n < 0 ? -n : n; }

	static inline float       fabs( float n ) 		{ return n < 0 ? -n : n; }
	static inline double      fabs( double n ) 		{ return n < 0 ? -n : n; }
	static inline long double fabs( long double n ) 	{ return n < 0 ? -n : n; }
}


#endif
