#ifndef IGRIS_STD_STREAMBUF_H
#define IGRIS_STD_STREAMBUF_H

#include <string>
#include <utility>

namespace std
{
    template <class CharT, class Traits = std::char_traits<CharT>>
    class basic_streambuf
    {
        using int_type = int;
        using char_type = CharT;

        class traits_type
        {
        public:
            static int_type eof()
            {
                return -1;
            }

            // eq_int_type
            static bool eq_int_type(int_type a, int_type b)
            {
                return a == b;
            }
        };

    public:
        virtual int_type overflow(int_type) = 0;
        virtual int xsputn(const CharT *, int) = 0;
        virtual ~basic_streambuf() {}

    public:
        int sputn(const CharT *s, int n)
        {
            return xsputn(s, n);
        }
    };
}

#endif